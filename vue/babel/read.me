

- 配置文件是.babelrc，存放在项目的根目录下。使用Babel的第一步，就是配置这个文件。 该文件用来设置转码规则和插件，基本格式如下。
   
        
        {
        "presets": [],  转码匹配规则
        "plugins": []  依赖插件
        }

         {
            "presets": [
            "es2015",  //  ES2015转码规则
            "react",    //react
            "stage-2"   //不同阶段的提案
            ],
            "plugins": []
        }
    
- # ES2015转码规则


        //Babel默认只转换新的JavaScript句法（syntax），而不转换新的API，比如Iterator、Generator、Set、Maps、Proxy、Reflect、Symbol、Promise等全局对象，以及一些定义在全局对象上的方法（比如Object.assign）都不会转码。
        $ npm install --save-dev babel-preset-es2015

        # react转码规则
        $ npm install --save-dev babel-preset-react

        # ES7不同阶段语法提案的转码规则（共有4个阶段），选装一个
        $ npm install --save-dev babel-preset-stage-0
        $ npm install --save-dev babel-preset-stage-1
        $ npm install --save-dev babel-preset-stage-2
        $ npm install --save-dev babel-preset-stage-3

  
-   babel基本命令  如果单独运行需要全局安装


        # 转码结果输出到标准输出
        $ babel example.js

        # 转码结果写入一个文件
        # --out-file 或 -o 参数指定输出文件
        $ babel example.js --out-file compiled.js
        # 或者
        $ babel example.js -o compiled.js

        # 整个目录转码
        # --out-dir 或 -d 参数指定输出目录
        $ babel src --out-dir lib
        # 或者
        $ babel src -d lib

        # -s 参数生成source map文件
        $ babel src -d lib -s

-   babel-polyfill
     
       Iterator、Generator、Set、Maps、Proxy、Reflect、Symbol、Promise等全局对象，以及一些定义在全局对象上的方法（比如Object.assign）babel都不会转码。
       须使用babel-polyfill，为当前环境提供一个垫片